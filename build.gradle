plugins {
  id 'java'
  id 'com.github.johnrengelman.shadow' version '2.0.1'
  id 'net.minecrell.licenser' version '0.3'
}

group = 'org.spongepowered'
version = '1.0.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

license {
  header project.file('header.txt')
  include '**/*.java'
  newLine false
}

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
  maven {
    name 'sk89q'
    url 'http://maven.sk89q.com/repo/'
  }
  maven {
    url 'https://jitpack.io/'
  }
}

dependencies {
  compile 'com.google.code.findbugs:jsr305:3.0.0'
  compile 'com.google.guava:guava:19.0'
  compile 'ninja.leaping.configurate:configurate-gson:3.2'
  compile 'org.apache.logging.log4j:log4j-api:2.10.0'
  compile 'org.apache.logging.log4j:log4j-core:2.10.0'
  compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.10.0'
  compile 'org.kitteh.irc:client-lib:4.0.0'
  compile 'com.github.austinv11:Discord4J:2.9.3'
  compile 'com.sk89q:intake:3.1.2'
  compile "com.google.http-client:google-http-client:1.21.0"
}

jar {
  manifest.attributes(
    'Implementation-Version': project.version + getGitHash(),
    'Main-Class': 'org.spongepowered.felix.Application'
  )
}

artifacts {
  archives shadowJar
}

def getGitHash() {
  def process = 'git rev-parse --short HEAD'.execute(null as String[], projectDir)
  process.waitFor()
  return '-' + (process.exitValue() ? 'unknown' : process.text.trim())
}
